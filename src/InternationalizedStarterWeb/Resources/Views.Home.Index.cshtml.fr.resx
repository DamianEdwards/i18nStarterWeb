<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add Authentication using Identity" xml:space="preserve">
    <value>Ajouter authentification à l'aide Identity</value>
  </data>
  <data name="Add Class library" xml:space="preserve">
    <value>Ajouter la bibliothèque de classe</value>
  </data>
  <data name="Add client packages using Bower" xml:space="preserve">
    <value>Ajouter des packages de clients à l'aide Bower</value>
  </data>
  <data name="Add Controllers and Views" xml:space="preserve">
    <value>Ajouter Contrôleurs et Vues</value>
  </data>
  <data name="Add Data using EntityFramework" xml:space="preserve">
    <value>Ajouter des données en utilisant EntityFramework</value>
  </data>
  <data name="Add real time support using SignalR" xml:space="preserve">
    <value>Ajout du support en temps réel en utilisant SignalR</value>
  </data>
  <data name="Bring in libraries from NuGet, Bower, and npm, and automate tasks using Grunt or Gulp." xml:space="preserve">
    <value>Apportez dans les bibliothèques de NuGet, Bower, et NPM, et automatiser les tâches utilisant Grunt ou Gulp.</value>
  </data>
  <data name="Customize app" xml:space="preserve">
    <value>Personnalisez app</value>
  </data>
  <data name="Develop on different platforms" xml:space="preserve">
    <value>Développer sur différentes plates-formes</value>
  </data>
  <data name="Hello there!!" xml:space="preserve">
    <value>Bonjour!</value>
  </data>
  <data name="Learn how to build ASP.NET apps that can run anywhere." xml:space="preserve">
    <value>Apprenez à créer des applications ASP.NET qui peuvent fonctionner ne importe où.</value>
  </data>
  <data name="Learn More" xml:space="preserve">
    <value>apprendre Encore Plus</value>
  </data>
  <data name="Manage client packages using Grunt" xml:space="preserve">
    <value>Gérer les packages de clients à l'aide Grunt</value>
  </data>
  <data name="Publish to Microsoft Azure Web Sites" xml:space="preserve">
    <value>Publier sur Microsoft Azure Sites Web</value>
  </data>
  <data name="Run &amp; Deploy" xml:space="preserve">
    <value>Exécuter et Déployer</value>
  </data>
  <data name="Run commands defined in your project.json" xml:space="preserve">
    <value>Exécuter des commandes définies dans votre project.json</value>
  </data>
  <data name="Run your app locally" xml:space="preserve">
    <value>Exécutez votre application localement</value>
  </data>
  <data name="Run your app on ASP.NET Core 5" xml:space="preserve">
    <value>Exécutez votre application sur ASP.NET Core 5</value>
  </data>
  <data name="Sample pages showing basic nav" xml:space="preserve">
    <value>Pages exemples montrant nav base</value>
  </data>
  <data name="Theming using &lt;a href=&quot;http://go.microsoft.com/fwlink/?LinkID=398939&quot;&gt;Bootstrap&lt;/a&gt;" xml:space="preserve">
    <value>Thématisation utilisant &lt;a href="http://go.microsoft.com/fwlink/?LinkID=398939"&gt; Bootstrap &lt;/a&gt;</value>
  </data>
  <data name="There are powerful new features in Visual Studio for building modern web apps." xml:space="preserve">
    <value>Il ya de nouvelles fonctionnalités puissantes dans Visual Studio pour la création d'applications web modernes.</value>
  </data>
  <data name="This application consists of:" xml:space="preserve">
    <value>Cette application se compose de:</value>
  </data>
</root>